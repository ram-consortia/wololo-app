<!DOCTYPE HTML>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0, minimum-scale=1.0, user-scalable=0, initial-scale=1.0, width=device-width" />
    <meta name="format-detection" content="telephone=no, email=no, date=no, address=no">
    <link rel="stylesheet" href="../../framework/iosSelect.css">
    <link rel="stylesheet" href="../../css/aPublicTimeStartEndSelector_pop.css">
</head>
<body>

    <script type="text/html" id="choice-template">
        <div class="choice">
            {{each _data.date}}
                <div tapmode="hover" onclick="fnChoice(this)" class="item" data-date="{{$value}}" data-index="{{$index}}">
                    <span>{{$value}}</span>
                </div>
                {{if !($index % 2)}}
                    <div class="item">至</div>
                {{/if}}
            {{/each}}
        </div>
    </script>
</body>
<script type="text/javascript" src="../../framework/template-web.js"></script>
<script type="text/javascript" src="../../framework/zepto.min.js"></script>
<script type="text/javascript" src="../../framework/iosSelect.js"></script>
<script type="text/javascript" src="../../script/public.js"></script>
<script type="text/javascript" src="../../script/base.js"></script>
<script type="text/javascript">
    // 页面初始化
    // fnInit('');
    // fnInit(new Date());
    // fnInit(fnDateNow_public());
    // fnInit('1541224673842');
    // fnInit('2018/12');
    // fnInit('2018/12/12 12:32');

    APP.init(function() {
        APP._continuity = 0;
        APP._dateIndex = 0;
        APP._selected_date = [];
        APP._data = api.pageParam;
        // debugAlert(APP._data)
        fnInit(APP._data.date);
    });

    function fnChoice(_el){
        if( $(_el).hasClass('active') ){

        }else{
            // $(_el).parent().find('.active').removeClass('active');
            // $(_el).addClass('active');
            APP._dateIndex = $(_el).attr('data-index');
            fnInit(fnValue($(_el).find('span')[0]));
        }
    }


    function fnInit(_date) {
        if( _date instanceof Array ){
            _date = _date[APP._dateIndex];
        }
        APP._date = new Date(_date);
        debugAlert(11111, APP._date)
        return;
        // 判断是否是一个正常的时间x
        if( isNaN(APP._date) ){
            APP._date = new Date();
        }

        // 判断是否设置过需要显示的时间层级
        if( ! APP._len ){
            if( typeof _date === 'string' ){
                var _split = _date.split(/[/ :]/);
                if( _split.length <= 1 ){
                    if( _split[0].length <= 4 ){
                        APP._len = 1;
                    }
                }else if( _split.length == 2 ){
                    // 年月格式补日，处理 ios 不能时间格式化兼容问题
                    _date+='/01';
                    APP._date = new Date(_date);
                    APP._len = 2;
                }else{
                    APP._len = _split.length;
                }
            }
        }
        fnOpenSelector();
        // $('body').removeClass('hide');
    }

    function fnOpenSelector(){
        var _date = new Date(APP._date);
        var oneLevelId = APP._nowYear = _date.getFullYear();
        // console.log( oneLevelId )
        var twoLevelId = _date.getMonth() + 1;
        var threeLevelId = _date.getDate();
        var fourLevelId = _date.getHours();
        var fiveLevelId = _date.getMinutes();
        var sixLevelId = _date.getSeconds();
        // console.log( _date, oneLevelId, twoLevelId, threeLevelId, fourLevelId )
        var _sureText = APP._data.sureText || '完成';

        APP._title = APP._data.title || '时间选择';
        if( typeof APP._title == 'string' ){
            APP._title = [APP._title];
        };

        var _title = APP._title[APP._continuity];

        var _data = [yearData, monthData, dateData, hourData, minuteData, secondsData];
        if( APP._len ){
            _data = _data.splice(0, APP._len);
        }
        // console.log( APP._date )
        $('.ios-select-widget-box').remove();
        var iosSelect = new IosSelect(_data.length,
            _data,
            {
                // title: '时间选择',
                sureText: _sureText,
                title: _title,
                oneLevelId: oneLevelId,
                twoLevelId: twoLevelId,
                threeLevelId: threeLevelId,
                fourLevelId: fourLevelId,
                fiveLevelId: fiveLevelId,
                sixLevelId: sixLevelId,
                itemShowCount: APP._data.itemShowCount || 5,
                itemHeight: APP._data.itemHeight || 55,
                callback: function (selectOneObj, selectTwoObj, selectThreeObj, selectFourObj, selectFiveObj, selectSixObj) {
                    // 选择完毕后的回调函数
                    for( var x in arguments ){
                        arguments[x].dom = null;
                    }
                    // debugAlert('2222222222 2',selectOneObj, selectTwoObj, selectThreeObj, selectFourObj, selectFiveObj, selectSixObj);
                    var _date = new Date(selectOneObj.id, selectTwoObj.id-1, selectThreeObj.id, selectFourObj.id, selectFiveObj.id, selectSixObj.id);
                    var _obj = {
                        date: _date,
                        value: {
                            one: selectOneObj,
                            two: selectTwoObj,
                            three: selectThreeObj,
                            four: selectFourObj,
                            five: selectFiveObj,
                            six: selectSixObj
                        }
                    }
                    fnSubmit(_obj);
                },
                fallback: function () {
                    // 选择取消后的回调函数
                    fnCloseModel();
                },
                maskCallback: function () {
                    // 点击背景层关闭组件时触发的方法
                    fnCloseModel();
                },
                scrollback: function(selectOneObj, selectTwoObj, selectThreeObj, selectFourObj, selectFiveObj, selectSixObj){
                    // 滚动完毕立刻的回调函数
                    for( var x in arguments ){
                        arguments[x].dom = null;
                    }
                    // debugAlert('2222222222 2',selectOneObj, selectTwoObj, selectThreeObj, selectFourObj, selectFiveObj, selectSixObj);
                    var _date = new Date(selectOneObj.id, selectTwoObj.id-1, selectThreeObj.id, selectFourObj.id, selectFiveObj.id, selectSixObj.id);
                    var _obj = {
                        date: _date,
                        value: {
                            one: selectOneObj,
                            two: selectTwoObj,
                            three: selectThreeObj,
                            four: selectFourObj,
                            five: selectFiveObj,
                            six: selectSixObj
                        }
                    }
                    fnValue(APP.dom('.choice .item.active'), _date.Format('yyyy/MM/dd'));
                    APP._data.date[APP._dateIndex] = _date.Format('yyyy/MM/dd');
                }
        });
        // $('body').removeClass('hide');
        $('ul').each(function(_index, _el) {
            if ($(_el).find('li').length) {

            } else {
                $(_el).parent().remove();
            }
        })
        $("header").after(template("choice-template", APP));
        $('.layer').css({
            height: $('header').height() + $('.choice').height() + $('.iosselect-box').height()
        })
        // $('.cover-area1').css({
        //     top: $('.at').offset().top - $('.layer').height() - $('.at').offset().height
        // })
        $('.cover-area1').css({
            top: $('.at').offset().top - ($('body').height() - $('.layer').height()) + $('.at').offset().height
        })
        // console.log($('.layer').height(), $('.at').offset(), $('.at').offset().top - ($('body').height() - $('.layer').height()))
        $(APP.dom('.choice .item[data-index="'+APP._dateIndex+'"]')).addClass('active');
    }



    // 数据初始化
    function formatYear(nowYear) {
        nowYear = APP._data.is_after ? nowYear : nowYear - 100;
        var arr = [];
        for (var i = nowYear; i <= nowYear + 200; i++) {
            arr.push({
                id: i + '',
                value: i + (APP._data.is_show_unit === false ? '' : '')
            });
        }
        return arr;
    }

    function formatMonth() {
        var arr = [];
        for (var i = 1; i <= 12; i++) {
            arr.push({
                id: i + '',
                value: i + (APP._data.is_show_unit === false ? '' : '')
            });
        }
        return arr;
    }

    function formatDate(count) {
        var arr = [];
        for (var i = 1; i <= count; i++) {
            arr.push({
                id: i + '',
                value: i + (APP._data.is_show_unit === false ? '' : '')
            });
        }
        return arr;
    }
    var yearData = function(callback) {
        callback(formatYear(APP._nowYear))
    }
    var monthData = function(year, callback) {
        callback(formatMonth());
    };
    var dateData = function(year, month, callback) {
        if (/^(1|3|5|7|8|10|12)$/.test(month)) {
            callback(formatDate(31));
        } else if (/^(4|6|9|11)$/.test(month)) {
            callback(formatDate(30));
        } else if (/^2$/.test(month)) {
            if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {
                callback(formatDate(29));
            } else {
                callback(formatDate(28));
            }
        } else {
            throw new Error('month is illegal');
        }
    };
    var hourData = function(one, two, three, callback) {
        var hours = [];
        for (var i = 0, len = 24; i < len; i++) {
            hours.push({
                id: i,
                value: i + (APP._data.is_show_unit === false ? '' : '时')
            });
        }
        callback(hours);
    };
    var minuteData = function(one, two, three, four, callback) {
        var minutes = [];
        if( APP._data.is_quarter ){
            var _quarter = 15;
            for (var i = 0, len = 60; i < len; i++) {
                var _result = i % _quarter;
                if( !_result ){
                    minutes.push({
                        id: i,
                        value: fnLt10Format(i) + (APP._data.is_show_unit === false ? '' : '分')
                    });
                }
            }
        }else {
            for (var i = 0, len = 60; i < len; i++) {
                minutes.push({
                    id: i,
                    value: i + (APP._data.is_show_unit === false ? '' : '分')
                });
            }
        }
        callback(minutes);
    };

    var secondsData = function(one, two, three, four, five, callback) {
        var seconds = [];
        for (var i = 0, len = 60; i < len; i++) {
            seconds.push({
                id: i,
                value: i + (APP._data.is_show_unit === false ? '' : '秒')
            });
        }
        callback(seconds);
    };


    // 从透明的地方关闭的窗口
    function fnCloseModel() {
        fnClosePop({
            hasModel: true
        });
    }

    // 关闭窗口并发送事件
    function fnClosePop(_data) {
        _data = _data || {};
        _data.time = APP._data.time;
        api.sendEvent({
            name: APP.EV_NAME.TIME_SELECTOR_START_END_POP,
            extra: _data || {}
        });
        fnClose();
    }

    function fnSubmit(_obj) {
        for( var x in APP._data.date ){
            APP._data.date[x] = new Date(APP._data.date[x]);
        }
        fnClosePop({
            date: APP._data.date,
            value: APP._data.date
        });
    }
        // APP._continuity = 0;
        // APP._dateIndex = 0;
        // APP._selected_date = [];
        // APP._data = {"date":["2018/12/12","2018/12/12"],"title":"请选择开始时间和结束时间","is_quarter":false,"itemShowCount":5,"itemHeight":55,"is_show_unit":true,"time":1554103225673};
        // // debugAlert(APP._data)
        // fnInit(APP._data.date);
</script>
</html>
