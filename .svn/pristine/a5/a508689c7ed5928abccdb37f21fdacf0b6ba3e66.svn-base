<!DOCTYPE HTML>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0, minimum-scale=1.0, user-scalable=0, initial-scale=1.0, width=device-width" />
    <meta name="format-detection" content="telephone=no, email=no, date=no, address=no">
    <link rel="stylesheet" href="../../css/aPublicAlert_pop.css">
</head>
<body class="hide">
    <div tapmode onclick="fnCloseModel()" class="model-fixd"></div>
    <div class="wrap">
        <div class="text">
            <div class="title hide">提示</div>
            <div class="msg hide">提示内容</div>
        </div>
        <div class="footer">
            <!-- <div class="item active">确定</div>
            <div class="item">取消</div>
            <div class="item">按钮三</div> -->
        </div>
    </div>
</body>
<script type="text/javascript" src="../../framework/zepto.min.js"></script>
<script type="text/javascript" src="../../script/language.js"></script>
<script type="text/javascript" src="../../script/public.js"></script>
<script type="text/javascript" src="../../script/base.js"></script>
<script type="text/javascript">
        // 页面初始化
    APP.init(function() {
        fnInit();
        // api.bringFrameToFront({
        //     from: api.frameName
        // });
    });

    function fnInit(){
        // 设置地步按钮
        if( APP._param.buttons && APP._param.buttons.length ){
            for( var x in APP._param.buttons ){
                $('.footer').append('<div tapmode="hover" onclick="fnSubmit(this)" class="item '+(APP._param.buttons[x].active && 'active' )+'">'+(fnLanguage_public(APP._param.buttons[x].text || '确认'))+''+( APP._param.buttons[x].countDown ? ' (<span class="count-down">'+APP._param.buttons[x].countDown+'</span>)' : '')+'</div>');

            }
        }else{
            fnClosePop();
        }

        // 设置标题
        if( APP._param.title ){
            fnValue('.title', fnLanguage_public(APP._param.title));
            $('.title').removeClass('hide');
        }

        // 设置提示内容
        if( APP._param.msg ){
            fnValue('.msg', fnLanguage_public(APP._param.msg));
            $('.msg').removeClass('hide');
        }
        $('body').removeClass('hide');
        fnCountDown();
    }

    function fnCountDown(){
        var _els = $('.count-down');
        if( _els.length ){
            _els.each(function(_index, _el){
                var _num = fnValue(_el);
                if( +_num > 1 ){
                    fnValue(_el, --_num);
                }else{
                    fnSubmit($(_el).closest('.item')[0]);
                }
            })
            setTimeout(function(){
                fnCountDown();
            }, 1000)
        }
    }

    // 从透明的地方关闭的窗口
    function fnCloseModel(){
        if( APP._param.model ){
            fnClosePop({
                hasModel: true
            });
        }
    }

    // 关闭窗口并发送事件
    function fnClosePop(_data){
        _data = _data || {};
        _data.time = APP._param.time;
        api.sendEvent({
            name: APP.EV_NAME.ALERT_POP,
            extra: _data || {}
        });
        fnClose();
    }

    function fnSubmit(_el){
        fnClosePop({
            buttonIndex: $(_el).index()
        });
    }
</script>
</html>
