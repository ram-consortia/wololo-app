<!DOCTYPE HTML>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0, minimum-scale=1.0, user-scalable=0, initial-scale=1.0, width=device-width" />
    <meta name="format-detection" content="telephone=no, email=no, date=no, address=no">
    <link rel="stylesheet" href="../../framework/iosSelect.css">
    <link rel="stylesheet" href="../../css/aPublicChoiceOfPlace_pop.css">
</head>
<body>

</body>
<script type="text/javascript" src="../../framework/zepto.min.js"></script>
<script type="text/javascript" src="../../framework/iosSelect.js"></script>
<script type="text/javascript" src="../../script/language.js"></script>
<script type="text/javascript" src="../../script/public.js"></script>
<script type="text/javascript" src="../../script/base.js"></script>
<script type="text/javascript">
    // 页面初始化


    // var _data = [];
    // for (var i = 1; i < 30; i++) {
    //     _data.push({
    //         id: i,
    //         value: i+'天'
    //     });
    // }
    // fnOpenSelector({
    //     active: [5],
    //     data: [_data],
    //     title: '选择天数'
    // });

    APP.init(function() {
        fnOpenSelector();
    });


    function fnOpenSelector(_data){
        _data = APP._param || _data;
        var oneLevelId = _fnHas(_data.active[0], 0);
        var twoLevelId = _fnHas(_data.active[1], 0);
        var threeLevelId = _fnHas(_data.active[2], 0);
        var fourLevelId = _fnHas(_data.active[3], 0);
        var fiveLevelId = _fnHas(_data.active[4], 0);
        var sixLevelId = _fnHas(_data.active[5], 0);
        var _sureText = fnLanguage_public(_data.sureText || '完成');
        var _closeText = fnLanguage_public(_data.closeText || '取消');

        var _title = fnLanguage_public(_data.title || '');
        // console.log( APP._date )
        $('.ios-select-widget-box').remove();
        var iosSelect = new IosSelect(_data.data.length,
            // relation: [1, 1],
          fnLanguage_public(_data.data),
            {
                // title: '时间选择',
                closeText: _closeText,
                sureText: _sureText,
                title: _title,
                oneLevelId: oneLevelId,
                twoLevelId: twoLevelId,
                threeLevelId: threeLevelId,
                fourLevelId: fourLevelId,
                fiveLevelId: fiveLevelId,
                sixLevelId: sixLevelId,
                itemShowCount: _data.itemShowCount || 3,
                itemHeight: _data.itemHeight || 55,
                relation: _data.relation || [],
                headerHeight:  _data.headerHeight || 55,
                callback: function () {
                    // 选择完毕后的回调函数
                    var _data = [];
                    for( var x in arguments ){
                        delete arguments[x].dom;
                        _data.push(arguments[x]);
                    }
                    var _obj = {
                        data: _data
                    }
                    fnSubmit(_obj);
                },
                fallback: function () {
                    // 选择取消后的回调函数
                    fnCloseModel();
                },
                maskCallback: function () {
                    // 点击背景层关闭组件时触发的方法
                    fnCloseModel();
                },
                scrollback: function(){
                    // 滚动完毕立刻的回调函数
                }
        });
        // $('body').removeClass('hide');
        $('ul').each(function(_index, _el) {
            if ($(_el).find('li').length) {

            } else {
                $(_el).parent().remove();
            }
        })

        function _fnHas(_value, _default){
            return fnHasEmpty_public(_value) ? _default : _value;
        }
    }


    // 从透明的地方关闭的窗口
    function fnCloseModel() {
        fnClosePop({
            hasModel: true
        });
    }

    // 关闭窗口并发送事件
    function fnClosePop(_data) {
        _data = _data || {};
        _data.time = APP._param.time;
        api.sendEvent({
            name: APP.EV_NAME.MULTISTAGE_SELECTOR,
            extra: _data || {}
        });
        fnClose();
    }

    function fnSubmit(_data) {
        fnClosePop(_data);
    }
</script>
</html>
